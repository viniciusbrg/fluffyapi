import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.21'
    id "com.google.protobuf" version "0.9.3"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.5.21"
}

ext {
    set('springCloudVersion', "2022.0.3")
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'com.hubspot.jackson:jackson-datatype-protobuf:0.9.13'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'com.google.protobuf:protobuf-java:3.23.2'
    implementation 'com.google.protobuf:protobuf-java-util:3.23.2'
    implementation 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'
    implementation 'com.github.innogames:springfox-protobuf:master-SNAPSHOT'
    implementation 'io.minio:minio:8.5.3'
    implementation 'com.github.javafaker:javafaker:1.0.2'


    runtimeOnly('org.postgresql:postgresql')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}